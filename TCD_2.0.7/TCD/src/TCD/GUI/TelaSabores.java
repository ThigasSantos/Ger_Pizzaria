/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TCD.GUI;

import TCD.Classes.Categoria;
import TCD.Classes.Ingrediente;
import TCD.Classes.Sabor;
import TCD.DB.CategoriaDao;
import TCD.DB.IngredienteDao;
import TCD.DB.SaborDao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 * Declaração da classe de Tela de Sabores
 * 
 * @author Marcos Dias
 * @author Rafael Paranhos
 * @author Thiago Evangelista
 * @author Wellington Junio
 */
public class TelaSabores extends javax.swing.JFrame {

    /** Lista de ingredientes */
    private List<Ingrediente> ingredientes;
    /** Lista de sabores */
    private List<Sabor> sabores;
    /** Lista de categorias */
    private List<Categoria> categorias;
    /** Variavel que salva um novo sabor */
    private Sabor novoSabor;
    
    /**
     * Creates new form TelaSabores
     */
    public TelaSabores() {
        initComponents();
        categorias = new CategoriaDao().localizarTodos();
        categorias.forEach(i->{
        categoriaCB.addItem(i.getNome());});
        buscar();
        novoSabor = new Sabor(); 
        buscarIngredientes();
    }
    
    /**
     * Atualiza a jlist de sabores
     */
    private void atualizarLista(){
        DefaultListModel model = new DefaultListModel();
        sabores.forEach(s->{
        model.addElement(s.toString());
        });
        saboresList.setModel(model);
    }
    
    /**
     * Limpa as text boxes
     */
    private void limparCampos(){
        nomeTF.setText("");
        buscar();
        novoSabor = new Sabor();
        atualizarIngredientesdoProduto();
    }
    
    /**
     * Busca todos os ingredientes
     */
    public void buscarIngredientes(){
        DefaultListModel model = new DefaultListModel();
        ingredientes = new IngredienteDao().localizarTodos();
        ingredientes.forEach(i->{
        model.addElement(i.toString());
        });
        todosIngredientes.setModel(model);
        atualizarIngredientesdoProduto();
    }
    
    /**
     * Atualiza os ingredientes de um produto
     */
    private void atualizarIngredientesdoProduto(){
        DefaultListModel model = new DefaultListModel();
        
        novoSabor.getIngredientes().forEach(i->{
        model.addElement(i.toString());
        });
        
        ingredientesdoSabor.setModel(model);
    }
    
    /**
     * Busca todos os sabores
     */
    private void buscar(){     
        sabores = new SaborDao().localizarTodos();    
        atualizarLista();
    }
    
    /**
     * Busca sabor por filtro de nome
     * @param nome para filtro
     */
    private void buscar(String nome){
        sabores= new SaborDao().buscarPorNome(nome);
        atualizarLista();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nomeTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        saboresList = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        todosIngredientes = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ingredientesdoSabor = new javax.swing.JList<>();
        adicionarIngrediente = new javax.swing.JButton();
        removerIngrediente = new javax.swing.JButton();
        limparBTN = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        salvarBTN = new javax.swing.JButton();
        excluirBTN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        categoriaCB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Nome");

        nomeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTFActionPerformed(evt);
            }
        });
        nomeTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomeTFKeyTyped(evt);
            }
        });

        saboresList.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Sabores"));
        saboresList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        saboresList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saboresListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(saboresList);

        jLabel7.setText("____________________________________________________________________________________________________");

        todosIngredientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(todosIngredientes);

        ingredientesdoSabor.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingredientes do Sabor"));
        ingredientesdoSabor.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(ingredientesdoSabor);

        adicionarIngrediente.setText("Adicionar Ingrediente ");
        adicionarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarIngredienteActionPerformed(evt);
            }
        });

        removerIngrediente.setText("Remover Ingrediente");
        removerIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerIngredienteActionPerformed(evt);
            }
        });

        limparBTN.setText("Limpar Seleção");
        limparBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparBTNActionPerformed(evt);
            }
        });

        jLabel8.setText("____________________________________________________________________________________________________");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Buscar:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        salvarBTN.setText("Salvar");
        salvarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarBTNActionPerformed(evt);
            }
        });

        excluirBTN.setText("Excluir");
        excluirBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirBTNActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Categoria");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adicionarIngrediente, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removerIngrediente))
                .addGap(72, 72, 72))
            .addGroup(layout.createSequentialGroup()
                .addComponent(salvarBTN)
                .addGap(17, 17, 17)
                .addComponent(excluirBTN)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(limparBTN))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nomeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(categoriaCB, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(103, 103, 103))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(10, 10, 10)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nomeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(categoriaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limparBTN)
                        .addGap(5, 5, 5)))
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(adicionarIngrediente))
                    .addComponent(removerIngrediente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salvarBTN)
                    .addComponent(excluirBTN))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    // <editor-fold defaultstate="collapsed" desc="Events">
    private void nomeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTFActionPerformed

    private void nomeTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeTFKeyTyped
        
        
    }//GEN-LAST:event_nomeTFKeyTyped

    private void saboresListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saboresListMouseClicked
        if(saboresList.getSelectedValue() == null )
            return;
        novoSabor = sabores.get(saboresList.getSelectedIndex());
        
        nomeTF.setText(novoSabor.getNome());
        categoriaCB.setSelectedItem(novoSabor.getCategoria().getNome());
        atualizarIngredientesdoProduto();
    }//GEN-LAST:event_saboresListMouseClicked

    private void adicionarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarIngredienteActionPerformed
        if(todosIngredientes.isSelectionEmpty())
        return;
        if( !novoSabor.getIngredientes().contains(ingredientes.get(todosIngredientes.getSelectedIndex())))
            novoSabor.getIngredientes().add(ingredientes.get(todosIngredientes.getSelectedIndex()));
        atualizarIngredientesdoProduto();

    }//GEN-LAST:event_adicionarIngredienteActionPerformed

    private void removerIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerIngredienteActionPerformed
        if(ingredientesdoSabor.isSelectionEmpty())
            return;
        novoSabor.getIngredientes().remove(ingredientesdoSabor.getSelectedIndex());
        atualizarIngredientesdoProduto();

    }//GEN-LAST:event_removerIngredienteActionPerformed

    private void limparBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparBTNActionPerformed
        saboresList.clearSelection();
        limparCampos();
        atualizarIngredientesdoProduto();

    }//GEN-LAST:event_limparBTNActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        String text = jTextField1.getText();
        char evtText = evt.getKeyChar();
        if(evtText != '\b' && evtText != '\n'){
            text = text + evtText;
        }
        buscar(text);
    }//GEN-LAST:event_jTextField1KeyTyped

    private void salvarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarBTNActionPerformed

        if(saboresList.getSelectedValue() != null)
            novoSabor = sabores.get(saboresList.getSelectedIndex());

        novoSabor.setNome(nomeTF.getText());

        
        novoSabor.setCategoria(categorias.get(categoriaCB.getSelectedIndex()));
        

        novoSabor.setId(new SaborDao().salvar(novoSabor));
        
        
        Sabor saborTemp = new SaborDao().localizarPorId(novoSabor.getId());
        
        for(Ingrediente ing :  saborTemp.getIngredientes()){
            if(!novoSabor.getIngredientes().contains(ing)){
                new SaborDao().excluirIngrediente(novoSabor, ing);
            }
        }
        for(Ingrediente ing :  novoSabor.getIngredientes()){
            if(!saborTemp.getIngredientes().contains(ing)){
                new SaborDao().salvarIngredienteEmSabor(novoSabor, ing);
            }
        }

        limparCampos();
        buscar();
    }//GEN-LAST:event_salvarBTNActionPerformed

    private void excluirBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirBTNActionPerformed
        if(saboresList.getSelectedValue() == null)
        return;
        novoSabor = sabores.get(saboresList.getSelectedIndex());
        new SaborDao().excluirSabor(novoSabor);
        buscar();
        limparCampos();
    }//GEN-LAST:event_excluirBTNActionPerformed
// </editor-fold>
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarIngrediente;
    private javax.swing.JComboBox<String> categoriaCB;
    private javax.swing.JButton excluirBTN;
    private javax.swing.JList<String> ingredientesdoSabor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton limparBTN;
    private javax.swing.JTextField nomeTF;
    private javax.swing.JButton removerIngrediente;
    private javax.swing.JList<String> saboresList;
    private javax.swing.JButton salvarBTN;
    private javax.swing.JList<String> todosIngredientes;
    // End of variables declaration//GEN-END:variables

}
